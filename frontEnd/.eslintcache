[{"/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/index.js":"1","/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/App.js":"2","/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/reportWebVitals.js":"3","/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/containers/MainContainer.js":"4","/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/containers/DiaryContainer.js":"5","/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/containers/MeditationContainer.js":"6","/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/helpers/request.js":"7","/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/containers/EntryContainer.js":"8","/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/components/NavBar.js":"9","/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/components/Meditation/MeditationDisplay.js":"10","/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/components/Meditation/MeditationSetup.js":"11","/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/components/Entry/EntryForm.js":"12","/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/components/Diary/DiaryDisplay.jsx":"13","/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/components/Entry/EntryDetail.jsx":"14"},{"size":500,"mtime":1607350835084,"results":"15","hashOfConfig":"16"},{"size":209,"mtime":1607351202692,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1607350835085,"results":"18","hashOfConfig":"16"},{"size":2956,"mtime":1607356092154,"results":"19","hashOfConfig":"16"},{"size":2124,"mtime":1607356092154,"results":"20","hashOfConfig":"16"},{"size":1269,"mtime":1607421615596,"results":"21","hashOfConfig":"16"},{"size":629,"mtime":1607350835084,"results":"22","hashOfConfig":"16"},{"size":582,"mtime":1607356092154,"results":"23","hashOfConfig":"16"},{"size":612,"mtime":1607360326249,"results":"24","hashOfConfig":"16"},{"size":1879,"mtime":1607421771251,"results":"25","hashOfConfig":"16"},{"size":254,"mtime":1607356742732,"results":"26","hashOfConfig":"16"},{"size":9465,"mtime":1607356092153,"results":"27","hashOfConfig":"16"},{"size":999,"mtime":1607356325824,"results":"28","hashOfConfig":"16"},{"size":678,"mtime":1607356092152,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1jqoqpj",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/index.js",[],["64","65"],"/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/App.js",[],"/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/reportWebVitals.js",[],"/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/containers/MainContainer.js",["66","67"],"import { WindowScrollController } from \"@fullcalendar/react\";\nimport React, {useState,useEffect} from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport NavBar from \"../components/NavBar\";\nimport DiaryContainer from \"./DiaryContainer\";\nimport EntryContainer from \"./EntryContainer\";\nimport MeditationContainer from \"./MeditationContainer\";\nimport Request from \"../helpers/request\";\n\nconst MainContainer = () => {\n\n    const[todayState, setTodayState] = useState([]);\n\n    const[showHide, setShowHide] = useState(\n        {\n            showMakeEntry:true,\n            showDailyStats:false\n        }\n    )\n\n    const requestToday = function(){\n        const request = new Request();\n        const today = new Date();\n        const todayFormat = `${today.getFullYear()}-${today.getMonth()+1}-${today.getDate()}`;\n        const todayPromise = request.get(`/entries/date/${todayFormat}`);\n\n        Promise.all([todayPromise])\n        .then((data) => {\n            setTodayState(data[0]);\n        })\n        .catch()\n    }\n\n\n\n    const handleMakeEntry = function(event){\n        event.preventDefault();\n        window.location=\"/entry\";\n    }\n\n    useEffect( () => {\n        requestToday();\n    },[])\n\n    useEffect(function viewSwitch(){\n\n        if(todayState.length > 0) {\n            let showHideCopy = {...showHide}\n            showHideCopy['showMakeEntry'] = false;\n            showHideCopy['showDailyStats'] = true;\n            setShowHide(showHideCopy);\n        } else {\n            let showHideCopy = {...showHide}\n            showHideCopy['showMakeEntry'] = true;\n            showHideCopy['showDailyStats'] = false;\n            setShowHide(showHideCopy);\n        }\n    },[todayState])\n\n    return(\n\n        <Router>\n            <>\n            <NavBar className=\"nav-bar\"/>\n            <div className=\"main-content\">\n            <Switch>\n\n                <Route path=\"/diary\" component={DiaryContainer} />\n\n                <Route path=\"/entry\" render={ () => {\n                    return <EntryContainer todayState={todayState}/>\n                }} />\n\n\n                <Route path=\"/meditation\" component={MeditationContainer} />\n                <Route render={ () => {\n                    return(\n                        <div>\n                        <h2>Good morning!</h2>\n                        {showHide.showMakeEntry ? \n                        <button onClick={handleMakeEntry}>Start your day with an entry</button>\n                        : null }\n\n                        {showHide.showDailyStats ? \n                            <div>\n                            <h3>Here are your daily stats: </h3>\n                            <p>blah blah</p>\n                            </div>\n                            : null }\n                        </div>\n                    )\n                }} />\n\n            </Switch>\n            </div>\n            </>\n        </Router>\n\n    )\n}\n\nexport default MainContainer;","/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/containers/DiaryContainer.js",["68"],"import React, {useState,useEffect} from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport DiaryDisplay from \"../components/Diary/DiaryDisplay\";\nimport Request from \"../helpers/request\";\n\nconst DiaryContainer = () => {\n\n    const[diary, setDiary] = useState([]);\n\n    const requestAll = function(){\n        const request = new Request();\n        const diaryPromise = request.get(\"/diary\");\n\n        Promise.all([diaryPromise])\n        .then((data)=> {\n            setDiary(data[0]);\n        })\n    }\n    \n    useEffect( () => {\n        requestAll();\n    },[])\n\n\n    const findEntryById = function(id) {\n        return diary.find((entry) => {\n            return entry.id === parseInt(id);\n        })\n    }\n\n    return(\n        // <p>I am the Diary container. I AM THE MASTER!</p>\n        // // search bar\n        // // calendar view\n        //     // list of days\n        //         // day component\n                \n        <Router>\n            <>\n            <Switch>\n\n                <Route exact path=\"/diary/:id\" render={ (props) => {\n                    const id = props.match.params.id;\n                    const entry = findEntryById(id);\n                    // return <EntryDetail entry={entry} />\n                    return <p>EntryDetail goes here</p>\n                }} />\n\n                {/* default view */}\n                <Route render={ () => {\n                    // return <CalendarView />\n                    return <DiaryDisplay/>\n                }} />\n\n            </Switch>\n            </>\n        </Router>\n    )\n}\n\nexport default DiaryContainer;","/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/containers/MeditationContainer.js",["69","70","71","72"],"/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/helpers/request.js",[],"/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/containers/EntryContainer.js",[],"/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/components/NavBar.js",[],"/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/components/Meditation/MeditationDisplay.js",["73","74"],"/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/components/Meditation/MeditationSetup.js",["75","76"],"import React, {useState, useEffect} from \"react\";\nimport MeditationDisplay from \"./MeditationDisplay\"\n\n\nconst MeditationSetup = () => {\n\n    return(\n\n        <>\n        <MeditationDisplay />\n\n\n        </>\n        \n    )\n}\n\nexport default MeditationSetup;","/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/components/Entry/EntryForm.js",["77"],"import React, {useState, useEffect} from \"react\";\n\n<<<<<<< HEAD\nconst EntryForm = () => {\n=======\n// COMMENT COMMENT COMMENT\n\nconst EntryForm = ({onCreate}) => {\n\n\n>>>>>>> c1ec18fdd4f946f05385b5d23c05c86a9448e38d\n\n    const[entry, setEntry] = useState(\n        {\n            date: String(Date.now()),\n            sleep: {},\n            mood: {},\n            prompt:\"\",\n            diary: {id:1},\n            meditation: {\n                completed: false,\n                length: 0\n            }\n        }\n    )\n\n    const[sleep,setSleep] = useState(\n       {\n        hours:0,\n        sleepQuality:\"\",\n        dream:\"\" \n       } \n    )\n\n    const[mood,setMood] = useState(\n        {\n            mindScore:0,\n            bodyScore:0,\n            mindReason:[],\n            bodyReason:[]\n        }\n    )\n\n    useEffect( () => {\n        let entryCopy = {...entry}\n        entryCopy[\"mood\"] = {...mood}\n        entryCopy[\"sleep\"] = {...sleep}\n        setEntry(entryCopy);\n    },[sleep,mood])\n\n    const[buttonDisplay, setButtonDisplay] = useState(\"\")\n\n    const handleSleepChange = function(event){\n        let propertyName = event.target.name;\n        let sleepCopy = {...sleep};\n        sleepCopy[propertyName] = event.target.value;\n        setSleep(sleepCopy);\n    }\n\n\n    const handleMoodChange = function(event){\n        let propertyName = event.target.name;\n        let moodCopy = {...mood};\n        moodCopy[propertyName] = event.target.value;\n        setMood(moodCopy);\n    }\n\n    const handleChange = function(event){\n        let propertyName = event.target.name;\n        let entryCopy = {...entry};\n        entryCopy[propertyName] = event.target.value;\n        setEntry(entryCopy);\n    }\n\n    const handleReasonChange = function(event){\n        let fieldName = event.target.name;\n        let value = event.target.value;\n        let moodCopy = {...mood};\n        moodCopy[fieldName].push(value);\n        setMood(moodCopy);\n    }\n\n    const[question, setQuestion] = useState(\n        [\"block\",\"none\",\"none\",\"none\",\"none\"]\n    )\n\n    const nextQuestion = function(event) {\n        event.preventDefault();\n        let questionCopy = [...question];\n\n        if (question.indexOf(\"block\") === 3 ){\n            setButtonDisplay(\"none\");\n        }\n\n       const questionIndex = question.indexOf(\"block\");\n       questionCopy[questionIndex] = \"none\";\n       questionCopy[(questionIndex+1)] = \"block\";\n       setQuestion(questionCopy);\n    }\n\n    const handleSubmit = function(event) {\n        event.preventDefault();\n        onCreate(entry);\n    }\n\n\n\n    return(\n        <>\n        <form onSubmit={handleSubmit}>\n            <div style={{display:question[0]}}>\n                <label>How many hours did you sleep for?</label>\n                <input name=\"hours\" type=\"number\" value={sleep.hours} onChange={handleSleepChange}></input>\n                <label>How was your sleep quality?</label>\n                <select name=\"sleepQuality\" onChange={handleSleepChange}>\n                    <option value=\"Restful\">Restful</option>\n                    <option value=\"WokeOnce\">I woke up once</option>\n                    <option value=\"WokeTwice\">I woke up twice</option>\n                    <option value=\"RestLess\">I was pretty restless</option>\n                    <option value=\"Bad\">I slept really badly</option>\n                    <option value=\"NoSleep\">I got no sleep at all</option>\n                </select>\n            </div>\n\n            <div style={{display:question[1]}}>\n                <label>Did you have any dreams?</label>\n                <input type=\"text\" name=\"dream\" onChange={handleSleepChange} value={sleep.dream}></input>\n            </div>\n\n            <div style={{display:question[2]}}>\n                <label>How does your body feel today?</label>\n                <p>{mood.bodyScore}/10</p>\n                <input type=\"range\" min=\"1\" max=\"10\" onChange={handleMoodChange} value={mood.bodyScore} name=\"bodyScore\"/>\n                <label>What's the reason?</label>\n                \n                <div className=\"reason-checkboxes\">\n                    <input type=\"checkbox\" name=\"bodyReason\" id=\"body-work\" value=\"Work\" onChange={handleReasonChange}/>\n                    <label for=\"body-work\">work</label>\n\n                    <input type=\"checkbox\" name=\"bodyReason\" id=\"body-family\" value=\"Family\" onChange={handleReasonChange}/>\n                    <label for=\"body-family\">family</label>\n\n                    <input type=\"checkbox\" name=\"bodyReason\" id=\"body-relationship\" value=\"Relationship\" onChange={handleReasonChange}/>\n                    <label for=\"body-relationship\">relationships</label>\n\n                    <input type=\"checkbox\" name=\"bodyReason\" id=\"body-education\" value=\"Education\" onChange={handleReasonChange}/>\n                    <label for=\"body-education\">education</label>\n\n                    <input type=\"checkbox\" name=\"bodyReason\" id=\"body-food\" value=\"Food\" onChange={handleReasonChange}/>\n                    <label for=\"body-food\">food</label>\n\n                    <input type=\"checkbox\" name=\"bodyReason\" id=\"body-travel\" value=\"Travel\" onChange={handleReasonChange}/>\n                    <label for=\"body-travel\">travel</label>\n\n                    <input type=\"checkbox\" name=\"bodyReason\" id=\"body-friends\" value=\"Friends\" onChange={handleReasonChange}/>\n                    <label for=\"body-friends\">friends</label>\n\n                    <input type=\"checkbox\" name=\"bodyReason\" id=\"body-exercise\" value=\"Exercise\" onChange={handleReasonChange}/>\n                    <label for=\"body-exercise\">exercise</label>\n\n                    <input type=\"checkbox\" name=\"bodyReason\" id=\"body-body\" value=\"Body\" onChange={handleReasonChange}/>\n                    <label for=\"body-body\">body</label>\n\n                    <input type=\"checkbox\" name=\"bodyReason\" id=\"body-covid\" value=\"Covid\" onChange={handleReasonChange}/>\n                    <label for=\"body-covid\">covid</label>\n\n                    <input type=\"checkbox\" name=\"bodyReason\" id=\"body-dont-know\" value=\"DontKnow\" onChange={handleReasonChange}/>\n                    <label for=\"body-dont-know\">I don't know</label>\n\n                </div>\n\n            </div>\n\n            <div style={{display:question[3]}}>\n            <label>How does your mind feel today?</label>\n                <p>{mood.mindScore}/10</p>\n                <input type=\"range\" min=\"1\" max=\"10\" onChange={handleMoodChange} value={mood.mindScore} name=\"mindScore\"/>\n                <label>What's the reason?</label>\n                \n                <div className=\"reason-checkboxes\">\n                    <input type=\"checkbox\" name=\"mindReason\" id=\"mind-work\" value=\"Work\" onChange={handleReasonChange}/>\n                    <label for=\"mind-work\">work</label>\n\n                    <input type=\"checkbox\" name=\"mindReason\" id=\"mind-family\" value=\"Family\" onChange={handleReasonChange}/>\n                    <label for=\"mind-family\">family</label>\n\n                    <input type=\"checkbox\" name=\"mindReason\" id=\"mind-relationship\" value=\"Relationship\" onChange={handleReasonChange}/>\n                    <label for=\"mind-relationship\">relationships</label>\n\n                    <input type=\"checkbox\" name=\"mindReason\" id=\"mind-education\" value=\"Education\" onChange={handleReasonChange}/>\n                    <label for=\"mind-education\">education</label>\n\n                    <input type=\"checkbox\" name=\"mindReason\" id=\"mind-food\" value=\"Food\" onChange={handleReasonChange}/>\n                    <label for=\"mind-food\">food</label>\n\n                    <input type=\"checkbox\" name=\"mindReason\" id=\"mind-travel\" value=\"Travel\" onChange={handleReasonChange}/>\n                    <label for=\"mind-travel\">travel</label>\n\n                    <input type=\"checkbox\" name=\"mindReason\" id=\"mind-friends\" value=\"Friends\" onChange={handleReasonChange}/>\n                    <label for=\"mind-friends\">friends</label>\n\n                    <input type=\"checkbox\" name=\"mindReason\" id=\"mind-exercise\" value=\"Exercise\" onChange={handleReasonChange}/>\n                    <label for=\"mind-exercise\">exercise</label>\n\n                    <input type=\"checkbox\" name=\"mindReason\" id=\"mind-body\" value=\"Body\" onChange={handleReasonChange}/>\n                    <label for=\"mind-body\">body</label>\n\n                    <input type=\"checkbox\" name=\"mindReason\" id=\"mind-covid\" value=\"Covid\" onChange={handleReasonChange}/>\n                    <label for=\"mind-covid\">covid</label>\n\n                    <input type=\"checkbox\" name=\"mindReason\" id=\"mind-dont-know\" value=\"DontKnow\" onChange={handleReasonChange}/>\n                    <label for=\"mind-dont-know\">I don't know</label>\n\n                </div>\n\n            </div>\n\n            <div style={{display:question[4]}}>\n                <label>How do you visualise the rest of the day going?</label>\n                <input type=\"text\" required onChange={handleChange} name=\"prompt\" value={entry.prompt}/>\n                <input type=\"submit\"/>\n            </div> \n\n\n        </form>\n        <button onClick={nextQuestion} style={{display:buttonDisplay}}>next</button>\n        </>\n    )\n\n}\n\nexport default EntryForm;","/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/components/Diary/DiaryDisplay.jsx",["78","79"],"import React from 'react'\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport interactionPlugin from '@fullcalendar/interaction'\nimport EntryDetail from \"../Entry/EntryDetail\"\n\nconst DiaryDisplay = ({diary, handleEntryClick}) => {\n\n  const events = []\n\n  if (diary[0] != undefined){\n    diary[0].entries.forEach(entry => {\n      let newCell = {title: entry.prompt.toString(),\n        date: entry.date.toString(),\n        id: entry.id, \n        allDay: true,\n        extendedProps: {...entry}\n      }\n        \n      events.push(newCell)\n    })}\n\n    const handleEventClick = function(eventClickInfo){\n      console.log(\"event CLICKED. Event ID\" + eventClickInfo)\n      handleEntryClick(eventClickInfo)\n    }\n  \n      \n    \n  return(  <FullCalendar className =\"Full-Calendar\"\n    plugins={[ dayGridPlugin, interactionPlugin ]}\n    initialView=\"dayGridMonth\" \n    events={events} eventClick={handleEventClick} /> \n  )\n\n}\n\nexport default DiaryDisplay;","/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/components/Entry/EntryDetail.jsx",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":1,"column":10,"nodeType":"86","messageId":"87","endLine":1,"endColumn":32},{"ruleId":"88","severity":1,"message":"89","line":58,"column":7,"nodeType":"90","endLine":58,"endColumn":19,"suggestions":"91"},{"ruleId":"84","severity":1,"message":"92","line":38,"column":15,"nodeType":"86","messageId":"87","endLine":38,"endColumn":18},{"ruleId":"84","severity":1,"message":"93","line":1,"column":26,"nodeType":"86","messageId":"87","endLine":1,"endColumn":35},{"ruleId":"84","severity":1,"message":"94","line":3,"column":8,"nodeType":"86","messageId":"87","endLine":3,"endColumn":15},{"ruleId":"84","severity":1,"message":"95","line":13,"column":17,"nodeType":"86","messageId":"87","endLine":13,"endColumn":25},{"ruleId":"84","severity":1,"message":"96","line":19,"column":17,"nodeType":"86","messageId":"87","endLine":19,"endColumn":25},{"ruleId":"84","severity":1,"message":"97","line":1,"column":16,"nodeType":"86","messageId":"87","endLine":1,"endColumn":24},{"ruleId":"88","severity":1,"message":"98","line":10,"column":8,"nodeType":"90","endLine":10,"endColumn":10,"suggestions":"99"},{"ruleId":"84","severity":1,"message":"97","line":1,"column":16,"nodeType":"86","messageId":"87","endLine":1,"endColumn":24},{"ruleId":"84","severity":1,"message":"93","line":1,"column":26,"nodeType":"86","messageId":"87","endLine":1,"endColumn":35},{"ruleId":"88","severity":1,"message":"100","line":45,"column":7,"nodeType":"90","endLine":45,"endColumn":19,"suggestions":"101"},{"ruleId":"84","severity":1,"message":"102","line":5,"column":8,"nodeType":"86","messageId":"87","endLine":5,"endColumn":19},{"ruleId":"103","severity":1,"message":"104","line":11,"column":16,"nodeType":"105","messageId":"106","endLine":11,"endColumn":18},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'WindowScrollController' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'showHide'. Either include it or remove the dependency array.","ArrayExpression",["109"],"'url' is assigned a value but never used.","'useEffect' is defined but never used.","'Request' is defined but never used.","'setTimer' is assigned a value but never used.","'setAudio' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'audio'. Either include it or remove the dependency array.",["110"],"React Hook useEffect has a missing dependency: 'entry'. Either include it or remove the dependency array.",["111"],"'EntryDetail' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},"Update the dependencies array to be: [showHide, todayState]",{"range":"118","text":"119"},"Update the dependencies array to be: [audio]",{"range":"120","text":"121"},"Update the dependencies array to be: [sleep, mood, entry]",{"range":"122","text":"123"},[1713,1725],"[showHide, todayState]",[216,218],"[audio]",[866,878],"[sleep, mood, entry]"]