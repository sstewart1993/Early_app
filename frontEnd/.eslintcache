[{"/Users/home/codeclan_work/project_03/mindfullness_app/frontEnd/src/index.js":"1","/Users/home/codeclan_work/project_03/mindfullness_app/frontEnd/src/App.js":"2","/Users/home/codeclan_work/project_03/mindfullness_app/frontEnd/src/reportWebVitals.js":"3","/Users/home/codeclan_work/project_03/mindfullness_app/frontEnd/src/containers/MainContainer.js":"4","/Users/home/codeclan_work/project_03/mindfullness_app/frontEnd/src/containers/MeditationContainer.js":"5","/Users/home/codeclan_work/project_03/mindfullness_app/frontEnd/src/containers/DiaryContainer.js":"6","/Users/home/codeclan_work/project_03/mindfullness_app/frontEnd/src/containers/EntryContainer.js":"7","/Users/home/codeclan_work/project_03/mindfullness_app/frontEnd/src/components/NavBar.js":"8","/Users/home/codeclan_work/project_03/mindfullness_app/frontEnd/src/helpers/request.js":"9","/Users/home/codeclan_work/project_03/mindfullness_app/frontEnd/src/components/Meditation/MeditationDisplay.js":"10","/Users/home/codeclan_work/project_03/mindfullness_app/frontEnd/src/components/Meditation/MeditationSetup.js":"11","/Users/home/codeclan_work/project_03/mindfullness_app/frontEnd/src/components/Entry/EntryForm.js":"12"},{"size":500,"mtime":1607098809720,"results":"13","hashOfConfig":"14"},{"size":208,"mtime":1607166266895,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1607098809721,"results":"16","hashOfConfig":"14"},{"size":723,"mtime":1607168733743,"results":"17","hashOfConfig":"14"},{"size":1078,"mtime":1607179666258,"results":"18","hashOfConfig":"14"},{"size":1561,"mtime":1607173161907,"results":"19","hashOfConfig":"14"},{"size":197,"mtime":1607181148293,"results":"20","hashOfConfig":"14"},{"size":585,"mtime":1607168787130,"results":"21","hashOfConfig":"14"},{"size":629,"mtime":1607167003890,"results":"22","hashOfConfig":"14"},{"size":317,"mtime":1607179966284,"results":"23","hashOfConfig":"14"},{"size":167,"mtime":1607172439283,"results":"24","hashOfConfig":"14"},{"size":2057,"mtime":1607188942307,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1plwu4b",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},"/Users/home/codeclan_work/project_03/mindfullness_app/frontEnd/src/index.js",[],["55","56"],"/Users/home/codeclan_work/project_03/mindfullness_app/frontEnd/src/App.js",[],"/Users/home/codeclan_work/project_03/mindfullness_app/frontEnd/src/reportWebVitals.js",[],"/Users/home/codeclan_work/project_03/mindfullness_app/frontEnd/src/containers/MainContainer.js",[],"/Users/home/codeclan_work/project_03/mindfullness_app/frontEnd/src/containers/MeditationContainer.js",["57","58","59","60"],"import React, {useState, useEffect} from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Request from \"../helpers/request\";\nimport MeditationSetup from \"../components/Meditation/MeditationSetup\";\nimport MeditationDisplay from \"../components/Meditation/MeditationDisplay\";\nimport sparrows from \"../assets/sparrows.wav\";\n\n\nconst MeditationContainer = () => {\n\n    const[timer,setTimer] = useState(0);\n\n    const audioSparrows = new Audio(sparrows)\n    let sounds = [audioSparrows];\n    const[audio,setAudio] = useState(sounds[0]);\n    \n\n    return(\n        // set up screen (choose length, audio, video)\n        // meditation screen\n\n        <Router>\n            <>\n            <Switch>\n\n            <Route path=\"/meditation/start\" render={ () => {\n                return <MeditationDisplay length={timer} audio={audio}/>\n            }}/>\n\n            <Route render={ () => {\n                return <MeditationSetup />\n            }}/>\n\n            </Switch>\n            </>\n        </Router>\n\n\n    )\n}\n\nexport default MeditationContainer;","/Users/home/codeclan_work/project_03/mindfullness_app/frontEnd/src/containers/DiaryContainer.js",["61"],"import React, {useState,useEffect} from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Request from \"../helpers/request\";\n\nconst DiaryContainer = () => {\n\n    const[diary, setDiary] = useState([]);\n\n    const requestAll = function(){\n        const request = new Request();\n        const diaryPromise = request.get(\"/diary\");\n\n        Promise.all([diaryPromise])\n        .then((data)=> {\n            setDiary(data[0]);\n        })\n    }\n    \n    useEffect( () => {\n        requestAll();\n    },[])\n\n\n    const findEntryById = function(id) {\n        return diary.find((entry) => {\n            return entry.id === parseInt(id);\n        })\n    }\n\n    return(\n        // <p>I am the Diary container. I AM THE MASTER!</p>\n        // // search bar\n        // // calendar view\n        //     // list of days\n        //         // day component\n                \n        <Router>\n            <>\n            <Switch>\n\n                <Route exact path=\"/diary/:id\" render={ (props) => {\n                    const id = props.match.params.id;\n                    const entry = findEntryById(id);\n                    // return <EntryDetail entry={entry} />\n                    return <p>EntryDetail goes here</p>\n                }} />\n\n                {/* default view */}\n                <Route render={ () => {\n                    // return <CalendarView />\n                    return <p>CalendarView goes here</p>\n                }} />\n\n            </Switch>\n            </>\n        </Router>\n    )\n}\n\nexport default DiaryContainer;","/Users/home/codeclan_work/project_03/mindfullness_app/frontEnd/src/containers/EntryContainer.js",[],"/Users/home/codeclan_work/project_03/mindfullness_app/frontEnd/src/components/NavBar.js",[],"/Users/home/codeclan_work/project_03/mindfullness_app/frontEnd/src/helpers/request.js",[],"/Users/home/codeclan_work/project_03/mindfullness_app/frontEnd/src/components/Meditation/MeditationDisplay.js",["62","63"],"/Users/home/codeclan_work/project_03/mindfullness_app/frontEnd/src/components/Meditation/MeditationSetup.js",["64","65"],"import React, {useState, useEffect} from \"react\";\n\nconst MeditationSetup = () => {\n\n    return(\n        <p>MeditationSetup</p>\n    )\n}\n\nexport default MeditationSetup;","/Users/home/codeclan_work/project_03/mindfullness_app/frontEnd/src/components/Entry/EntryForm.js",["66","67","68"],"import React, {useState, useEffect} from \"react\";\n\nconst EntryForm = () => {\n\n    const[entry, setEntry] = useState(\n        {\n            date: Date.now(),\n            sleep: {\n                hours:0,\n                sleepQuality:\"\",\n                dream:\"\"\n            },\n            mood: {\n                mindScore:0,\n                bodyScore:0,\n                mindReason:[],\n                bodyReason:[]\n            },\n            prompt:\"\",\n            diary: {id:1},\n            meditation: {\n                completed: false,\n                length: 0\n            }\n        }\n    )\n\n    const[question, setQuestion] = useState(\n        [\"block\",\"none\"]\n    )\n\n    const nextQuestion = function(event) {\n        event.preventDefault();\n       const questionIndex = question.indexOf(\"block\");\n       let questionCopy = {...question};\n       questionCopy[questionIndex] = \"none\";\n       questionCopy[(questionIndex+1)] = \"block\";\n       setQuestion(questionCopy);\n    }\n\n\n\n    return(\n        <>\n        <form>\n            <div style={{display:question[0]}}>\n                <label>How many hours did you sleep for?</label>\n                <input type=\"number\"></input>\n                <label>How was your sleep quality?</label>\n                <select>\n                    <option value=\"Restful\">Restful</option>\n                    <option value=\"WokeOnce\">I woke up once</option>\n                    <option value=\"WokeTwice\">I woke up twice</option>\n                    <option value=\"RestLess\">I was pretty restless</option>\n                    <option value=\"Bad\">I slept really badly</option>\n                    <option value=\"NoSleep\">I got no sleep at all</option>\n                </select>\n            </div>\n\n            <div style={{display:question[1]}}>\n                <label>Did you have any dreams?</label>\n                <input type=\"text\"></input>\n                <input type=\"submit\"/>\n            </div>\n\n\n        </form>\n        <button onClick={nextQuestion}>next</button>\n        </>\n    )\n\n}\n\nexport default EntryForm;",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":26,"nodeType":"75","messageId":"76","endLine":1,"endColumn":35},{"ruleId":"73","severity":1,"message":"77","line":3,"column":8,"nodeType":"75","messageId":"76","endLine":3,"endColumn":15},{"ruleId":"73","severity":1,"message":"78","line":11,"column":17,"nodeType":"75","messageId":"76","endLine":11,"endColumn":25},{"ruleId":"73","severity":1,"message":"79","line":15,"column":17,"nodeType":"75","messageId":"76","endLine":15,"endColumn":25},{"ruleId":"73","severity":1,"message":"80","line":43,"column":27,"nodeType":"75","messageId":"76","endLine":43,"endColumn":32},{"ruleId":"73","severity":1,"message":"81","line":1,"column":16,"nodeType":"75","messageId":"76","endLine":1,"endColumn":24},{"ruleId":"82","severity":1,"message":"83","line":7,"column":7,"nodeType":"84","endLine":7,"endColumn":9,"suggestions":"85"},{"ruleId":"73","severity":1,"message":"81","line":1,"column":16,"nodeType":"75","messageId":"76","endLine":1,"endColumn":24},{"ruleId":"73","severity":1,"message":"74","line":1,"column":26,"nodeType":"75","messageId":"76","endLine":1,"endColumn":35},{"ruleId":"73","severity":1,"message":"74","line":1,"column":26,"nodeType":"75","messageId":"76","endLine":1,"endColumn":35},{"ruleId":"73","severity":1,"message":"80","line":5,"column":11,"nodeType":"75","messageId":"76","endLine":5,"endColumn":16},{"ruleId":"73","severity":1,"message":"86","line":5,"column":18,"nodeType":"75","messageId":"76","endLine":5,"endColumn":26},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Request' is defined but never used.","'setTimer' is assigned a value but never used.","'setAudio' is assigned a value but never used.","'entry' is assigned a value but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'audio'. Either include it or remove the dependency array.","ArrayExpression",["89"],"'setEntry' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},"Update the dependencies array to be: [audio]",{"range":"92","text":"93"},[150,152],"[audio]"]