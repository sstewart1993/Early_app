[{"/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/index.js":"1","/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/App.js":"2","/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/reportWebVitals.js":"3","/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/containers/MainContainer.js":"4","/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/containers/DiaryContainer.js":"5","/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/containers/MeditationContainer.js":"6","/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/helpers/request.js":"7","/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/containers/EntryContainer.js":"8","/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/components/NavBar.js":"9","/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/components/Meditation/MeditationDisplay.js":"10","/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/components/Meditation/MeditationSetup.js":"11","/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/components/Entry/EntryForm.js":"12","/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/components/Diary/DiaryDisplay.jsx":"13"},{"size":500,"mtime":1607350835084,"results":"14","hashOfConfig":"15"},{"size":209,"mtime":1607351202692,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1607350835085,"results":"17","hashOfConfig":"15"},{"size":723,"mtime":1607355947819,"results":"18","hashOfConfig":"15"},{"size":1608,"mtime":1607355947818,"results":"19","hashOfConfig":"15"},{"size":1078,"mtime":1607350835084,"results":"20","hashOfConfig":"15"},{"size":629,"mtime":1607350835084,"results":"21","hashOfConfig":"15"},{"size":465,"mtime":1607355947819,"results":"22","hashOfConfig":"15"},{"size":585,"mtime":1607355947818,"results":"23","hashOfConfig":"15"},{"size":688,"mtime":1607355947816,"results":"24","hashOfConfig":"15"},{"size":285,"mtime":1607355947817,"results":"25","hashOfConfig":"15"},{"size":9139,"mtime":1607355947815,"results":"26","hashOfConfig":"15"},{"size":311,"mtime":1607355947815,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jqoqpj",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},"/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/index.js",[],"/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/App.js",[],"/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/reportWebVitals.js",[],"/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/containers/MainContainer.js",[],"/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/containers/DiaryContainer.js",["60"],"import React, {useState,useEffect} from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport DiaryDisplay from \"../components/Diary/DiaryDisplay\";\nimport Request from \"../helpers/request\";\n\nconst DiaryContainer = () => {\n\n    const[diary, setDiary] = useState([]);\n\n    const requestAll = function(){\n        const request = new Request();\n        const diaryPromise = request.get(\"/diary\");\n\n        Promise.all([diaryPromise])\n        .then((data)=> {\n            setDiary(data[0]);\n        })\n    }\n    \n    useEffect( () => {\n        requestAll();\n    },[])\n\n\n    const findEntryById = function(id) {\n        return diary.find((entry) => {\n            return entry.id === parseInt(id);\n        })\n    }\n\n    return(\n        // <p>I am the Diary container. I AM THE MASTER!</p>\n        // // search bar\n        // // calendar view\n        //     // list of days\n        //         // day component\n                \n        <Router>\n            <>\n            <Switch>\n\n                <Route exact path=\"/diary/:id\" render={ (props) => {\n                    const id = props.match.params.id;\n                    const entry = findEntryById(id);\n                    // return <EntryDetail entry={entry} />\n                    return <p>EntryDetail goes here</p>\n                }} />\n\n                {/* default view */}\n                <Route render={ () => {\n                    // return <CalendarView />\n                    return <DiaryDisplay/>\n                }} />\n\n            </Switch>\n            </>\n        </Router>\n    )\n}\n\nexport default DiaryContainer;",["61","62"],"/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/containers/MeditationContainer.js",["63","64","65","66"],"/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/helpers/request.js",[],"/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/containers/EntryContainer.js",[],"/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/components/NavBar.js",[],"/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/components/Meditation/MeditationDisplay.js",["67","68","69","70","71"],"import React, {useState, useEffect} from \"react\";\nimport \"./Animation.css\"\nimport forest from \"../../assets/Forest.jpg\"\nimport ball from \"../../assets/Ball.jpg\"\nimport ball1 from \"../../assets/Ball1.jpg\"\n\n\n\n\n\nconst MeditationDisplay = ({timer,audio}) => {\n\n    // useEffect( () => {\n    //     audio.play();\n    // },[])\n\n\n\n\n    \n\n    return(\n        <>\n            <p1>MeditationDisplay</p1>\n            <audio src={audio} loop />\n            <img className = \"ball\" src={ball} alt=\"ball\" />\n            <p className =\"breath\" id=\"in\">Breath In</p>\n            <p className =\"breath\" id=\"out\">BreathOut</p>\n\n            \n\n        </>\n        \n    )\n}\n\n\n\nexport default MeditationDisplay;","/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/components/Meditation/MeditationSetup.js",["72","73"],"import React, {useState, useEffect} from \"react\";\nimport MeditationDisplay from \"./MeditationDisplay\"\n\n\nconst MeditationSetup = () => {\n\n    return(\n\n        <>\n        <p>MeditationSetup</p>\n        <MeditationDisplay />\n\n\n        </>\n        \n    )\n}\n\nexport default MeditationSetup;","/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/components/Entry/EntryForm.js",["74"],"import React, {useState, useEffect} from \"react\";\n\n<<<<<<< HEAD\nconst EntryForm = () => {\n=======\n// COMMENT COMMENT COMMENT\n\nconst EntryForm = ({onCreate}) => {\n\n\n>>>>>>> c1ec18fdd4f946f05385b5d23c05c86a9448e38d\n\n    const[entry, setEntry] = useState(\n        {\n            date: String(Date.now()),\n            sleep: {},\n            mood: {},\n            prompt:\"\",\n            diary: {id:1},\n            meditation: {\n                completed: false,\n                length: 0\n            }\n        }\n    )\n\n    const[sleep,setSleep] = useState(\n       {\n        hours:0,\n        sleepQuality:\"\",\n        dream:\"\" \n       } \n    )\n\n    const[mood,setMood] = useState(\n        {\n            mindScore:0,\n            bodyScore:0,\n            mindReason:[],\n            bodyReason:[]\n        }\n    )\n\n    useEffect( () => {\n        let entryCopy = {...entry}\n        entryCopy[\"mood\"] = {...mood}\n        entryCopy[\"sleep\"] = {...sleep}\n        setEntry(entryCopy);\n    },[sleep,mood])\n\n    const[buttonDisplay, setButtonDisplay] = useState(\"\")\n\n    const handleSleepChange = function(event){\n        let propertyName = event.target.name;\n        let sleepCopy = {...sleep};\n        sleepCopy[propertyName] = event.target.value;\n        setSleep(sleepCopy);\n    }\n\n\n    const handleMoodChange = function(event){\n        let propertyName = event.target.name;\n        let moodCopy = {...mood};\n        moodCopy[propertyName] = event.target.value;\n        setMood(moodCopy);\n    }\n\n    const handleChange = function(event){\n        let propertyName = event.target.name;\n        let entryCopy = {...entry};\n        entryCopy[propertyName] = event.target.value;\n        setEntry(entryCopy);\n    }\n\n    const handleReasonChange = function(event){\n        let fieldName = event.target.name;\n        let value = event.target.value;\n        let moodCopy = {...mood};\n        moodCopy[fieldName].push(value);\n        setMood(moodCopy);\n    }\n\n    const[question, setQuestion] = useState(\n        [\"block\",\"none\",\"none\",\"none\",\"none\"]\n    )\n\n    const nextQuestion = function(event) {\n        event.preventDefault();\n        let questionCopy = [...question];\n\n        if (question.indexOf(\"block\") === 3 ){\n            setButtonDisplay(\"none\");\n        }\n\n       const questionIndex = question.indexOf(\"block\");\n       questionCopy[questionIndex] = \"none\";\n       questionCopy[(questionIndex+1)] = \"block\";\n       setQuestion(questionCopy);\n    }\n\n    const handleSubmit = function(event) {\n        event.preventDefault();\n        onCreate(entry);\n    }\n\n\n\n    return(\n        <>\n        <form onSubmit={handleSubmit}>\n            <div style={{display:question[0]}}>\n                <label>How many hours did you sleep for?</label>\n                <input name=\"hours\" type=\"number\" value={sleep.hours} onChange={handleSleepChange}></input>\n                <label>How was your sleep quality?</label>\n                <select name=\"sleepQuality\" onChange={handleSleepChange}>\n                    <option value=\"Restful\">Restful</option>\n                    <option value=\"WokeOnce\">I woke up once</option>\n                    <option value=\"WokeTwice\">I woke up twice</option>\n                    <option value=\"RestLess\">I was pretty restless</option>\n                    <option value=\"Bad\">I slept really badly</option>\n                    <option value=\"NoSleep\">I got no sleep at all</option>\n                </select>\n            </div>\n\n            <div style={{display:question[1]}}>\n                <label>Did you have any dreams?</label>\n                <input type=\"text\" name=\"dream\" onChange={handleSleepChange} value={sleep.dream}></input>\n            </div>\n\n            <div style={{display:question[2]}}>\n                <label>How does your body feel today?</label>\n                <p>{mood.bodyScore}/10</p>\n                <input type=\"range\" min=\"1\" max=\"10\" onChange={handleMoodChange} value={mood.bodyScore} name=\"bodyScore\"/>\n                <label>What's the reason?</label>\n                \n                <div className=\"reason-checkboxes\">\n                    <input type=\"checkbox\" name=\"bodyReason\" id=\"body-work\" value=\"Work\" onChange={handleReasonChange}/>\n                    <label for=\"body-work\">work</label>\n\n                    <input type=\"checkbox\" name=\"bodyReason\" id=\"body-family\" value=\"Family\" onChange={handleReasonChange}/>\n                    <label for=\"body-family\">family</label>\n\n                    <input type=\"checkbox\" name=\"bodyReason\" id=\"body-relationship\" value=\"Relationship\" onChange={handleReasonChange}/>\n                    <label for=\"body-relationship\">relationships</label>\n\n                    <input type=\"checkbox\" name=\"bodyReason\" id=\"body-education\" value=\"Education\" onChange={handleReasonChange}/>\n                    <label for=\"body-education\">education</label>\n\n                    <input type=\"checkbox\" name=\"bodyReason\" id=\"body-food\" value=\"Food\" onChange={handleReasonChange}/>\n                    <label for=\"body-food\">food</label>\n\n                    <input type=\"checkbox\" name=\"bodyReason\" id=\"body-travel\" value=\"Travel\" onChange={handleReasonChange}/>\n                    <label for=\"body-travel\">travel</label>\n\n                    <input type=\"checkbox\" name=\"bodyReason\" id=\"body-friends\" value=\"Friends\" onChange={handleReasonChange}/>\n                    <label for=\"body-friends\">friends</label>\n\n                    <input type=\"checkbox\" name=\"bodyReason\" id=\"body-exercise\" value=\"Exercise\" onChange={handleReasonChange}/>\n                    <label for=\"body-exercise\">exercise</label>\n\n                    <input type=\"checkbox\" name=\"bodyReason\" id=\"body-body\" value=\"Body\" onChange={handleReasonChange}/>\n                    <label for=\"body-body\">body</label>\n\n                    <input type=\"checkbox\" name=\"bodyReason\" id=\"body-covid\" value=\"Covid\" onChange={handleReasonChange}/>\n                    <label for=\"body-covid\">covid</label>\n\n                    <input type=\"checkbox\" name=\"bodyReason\" id=\"body-dont-know\" value=\"DontKnow\" onChange={handleReasonChange}/>\n                    <label for=\"body-dont-know\">I don't know</label>\n\n                </div>\n\n            </div>\n\n            <div style={{display:question[3]}}>\n            <label>How does your mind feel today?</label>\n                <p>{mood.mindScore}/10</p>\n                <input type=\"range\" min=\"1\" max=\"10\" onChange={handleMoodChange} value={mood.mindScore} name=\"mindScore\"/>\n                <label>What's the reason?</label>\n                \n                <div className=\"reason-checkboxes\">\n                    <input type=\"checkbox\" name=\"mindReason\" id=\"mind-work\" value=\"Work\" onChange={handleReasonChange}/>\n                    <label for=\"mind-work\">work</label>\n\n                    <input type=\"checkbox\" name=\"mindReason\" id=\"mind-family\" value=\"Family\" onChange={handleReasonChange}/>\n                    <label for=\"mind-family\">family</label>\n\n                    <input type=\"checkbox\" name=\"mindReason\" id=\"mind-relationship\" value=\"Relationship\" onChange={handleReasonChange}/>\n                    <label for=\"mind-relationship\">relationships</label>\n\n                    <input type=\"checkbox\" name=\"mindReason\" id=\"mind-education\" value=\"Education\" onChange={handleReasonChange}/>\n                    <label for=\"mind-education\">education</label>\n\n                    <input type=\"checkbox\" name=\"mindReason\" id=\"mind-food\" value=\"Food\" onChange={handleReasonChange}/>\n                    <label for=\"mind-food\">food</label>\n\n                    <input type=\"checkbox\" name=\"mindReason\" id=\"mind-travel\" value=\"Travel\" onChange={handleReasonChange}/>\n                    <label for=\"mind-travel\">travel</label>\n\n                    <input type=\"checkbox\" name=\"mindReason\" id=\"mind-friends\" value=\"Friends\" onChange={handleReasonChange}/>\n                    <label for=\"mind-friends\">friends</label>\n\n                    <input type=\"checkbox\" name=\"mindReason\" id=\"mind-exercise\" value=\"Exercise\" onChange={handleReasonChange}/>\n                    <label for=\"mind-exercise\">exercise</label>\n\n                    <input type=\"checkbox\" name=\"mindReason\" id=\"mind-body\" value=\"Body\" onChange={handleReasonChange}/>\n                    <label for=\"mind-body\">body</label>\n\n                    <input type=\"checkbox\" name=\"mindReason\" id=\"mind-covid\" value=\"Covid\" onChange={handleReasonChange}/>\n                    <label for=\"mind-covid\">covid</label>\n\n                    <input type=\"checkbox\" name=\"mindReason\" id=\"mind-dont-know\" value=\"DontKnow\" onChange={handleReasonChange}/>\n                    <label for=\"mind-dont-know\">I don't know</label>\n\n                </div>\n\n            </div>\n\n            <div style={{display:question[4]}}>\n                <label>How do you visualise the rest of the day going?</label>\n                <input type=\"text\" required onChange={handleChange} name=\"prompt\" value={entry.prompt}/>\n                <input type=\"submit\"/>\n            </div> \n\n\n        </form>\n        <button onClick={nextQuestion} style={{display:buttonDisplay}}>next</button>\n        </>\n    )\n\n}\n\nexport default EntryForm;","/Users/codeclanstudent/codeclan_work/homework_folder/java_project/mindfullness_app/frontEnd/src/components/Diary/DiaryDisplay.jsx",["75","76"],"import React from 'react'\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\n\nconst DiaryDisplay = () => {\n\n  return(  <FullCalendar className =\"Full-Calendar\"\n    plugins={[ dayGridPlugin ]}\n    initialView=\"dayGridMonth\"\n  /> \n  )\n\n}\n\nexport default DiaryDisplay;",{"ruleId":"77","severity":1,"message":"78","line":38,"column":15,"nodeType":"79","messageId":"80","endLine":38,"endColumn":18},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"77","severity":1,"message":"85","line":1,"column":26,"nodeType":"79","messageId":"80","endLine":1,"endColumn":35},{"ruleId":"77","severity":1,"message":"86","line":3,"column":8,"nodeType":"79","messageId":"80","endLine":3,"endColumn":15},{"ruleId":"77","severity":1,"message":"87","line":11,"column":17,"nodeType":"79","messageId":"80","endLine":11,"endColumn":25},{"ruleId":"77","severity":1,"message":"88","line":15,"column":17,"nodeType":"79","messageId":"80","endLine":15,"endColumn":25},{"ruleId":"77","severity":1,"message":"89","line":1,"column":16,"nodeType":"79","messageId":"80","endLine":1,"endColumn":24},{"ruleId":"77","severity":1,"message":"85","line":1,"column":26,"nodeType":"79","messageId":"80","endLine":1,"endColumn":35},{"ruleId":"77","severity":1,"message":"90","line":3,"column":8,"nodeType":"79","messageId":"80","endLine":3,"endColumn":14},{"ruleId":"77","severity":1,"message":"91","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":12},{"ruleId":"77","severity":1,"message":"92","line":5,"column":8,"nodeType":"79","messageId":"80","endLine":5,"endColumn":13},{"ruleId":"77","severity":1,"message":"89","line":1,"column":16,"nodeType":"79","messageId":"80","endLine":1,"endColumn":24},{"ruleId":"77","severity":1,"message":"85","line":1,"column":26,"nodeType":"79","messageId":"80","endLine":1,"endColumn":35},{"ruleId":"93","severity":1,"message":"94","line":45,"column":7,"nodeType":"95","endLine":45,"endColumn":19,"suggestions":"96"},{"ruleId":"77","severity":1,"message":"97","line":5,"column":8,"nodeType":"79","messageId":"80","endLine":5,"endColumn":19},{"ruleId":"98","severity":1,"message":"99","line":11,"column":16,"nodeType":"100","messageId":"101","endLine":11,"endColumn":18},"no-unused-vars","'url' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["102"],"no-negated-in-lhs",["103"],"'useEffect' is defined but never used.","'Request' is defined but never used.","'setTimer' is assigned a value but never used.","'setAudio' is assigned a value but never used.","'useState' is defined but never used.","'forest' is defined but never used.","'ball' is defined but never used.","'ball1' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'entry'. Either include it or remove the dependency array.","ArrayExpression",["104"],"'EntryDetail' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},"Update the dependencies array to be: [sleep, mood, entry]",{"range":"107","text":"108"},[866,878],"[sleep, mood, entry]"]